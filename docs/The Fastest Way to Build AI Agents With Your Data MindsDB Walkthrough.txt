The Fastest Way to Build AI Agents With Your Data (MindsDB Walkthrough)
 Transcrito por TurboScribe.ai. Atualize para Ilimitado para remover esta mensagem. 
Hoje eu vou mostrar uma das maneiras mais rápidas de você construir um agente de A.I. em torno de dados que você já tem. Neste canal, eu mostro tudo de como construir agentes de A.I. desde o início, onde nós escrevemos em código Python. Eu mostrei alguns tools de nível mais alto, e hoje eu vou mostrar este tool gratuito e aberto chamado MindsDB.

E, efetivamente, o que isso permite você fazer é se conectar a um monte de fontes de dados diferentes, unificá-los juntos, e então gerar agentes e receber respostas dos seus dados. Eu vou mostrar algumas demonstrações, eu vou mostrar como estabelecê-lo, mas é gratuito, aberto a fonte, muito fácil de usar, e para aqueles de vocês que só querem respostas sobre seus dados o mais rápido possível, e você não quer ir lá e escrever todo o código manualmente, este é um dos melhores tools que você pode usar. Então, com isso, vamos entrar no vídeo, e deixe-me mostrar como estabelecer este tool e explicar onde é realmente beneficioso.

Então, eu estou apenas na documentação aqui, e vamos passar por alguns conceitos importantes, e depois eu vou descer e mostrar como estabelecer isto e como criar um agente em torno dos seus dados. Agora, o MindsDB é na verdade um parceiro de longo prazo do meu, eles já patrocinaram este vídeo, mas já fizeram alguns outros no canal também, e vocês sempre deram bons comentários sobre o tool, e é por isso que estamos fazendo isto de novo. Ok, então o MindsDB, essencialmente o que ele permite você fazer, é se conectar a um monte de fontes de dados diferentes.

Então, se for um database SQL, se for até mesmo um site, por exemplo, você pode até mesmo escorregar sites, se for algo como Slack, MongoDB, dados estruturados ou não estruturados, você pode conectá-los dentro do MindsDB. Então, isso sozinho é útil, e essa é a primeira fase da sua filosofia aqui, você sabe, se conectar a um monte de fontes de dados diferentes em um lugar. Depois, o próximo é unificar este dado.

Então, muitas vezes, nós temos dados de diferentes fontes, e nós queremos poder combinar esse dado juntos, para que nós possamos usá-lo para obter insights mais acionáveis. E depois, é claro, responder. Então, neste caso, nós vamos criar um simples agente AI, que pode tomar a nossa fonte de dados, e então responder as queries, e pode usar várias fontes de dados em uma.

E, de novo, é muito rápido fazer isso, e o que nós efetivamente vamos fazer aqui, é escrever queries SQL que vão gerar todas essas operações, então não é uma ferramenta completamente sem código, mas é muito mais simples do que se você estivesse escrevendo algo completamente de novo, usando, tipo, LangChain, ou LangGraph, etc. Ok, então, com isso dito, deixe-me mostrar para você como instalar isso no seu computador. De novo, lembre-se, isso é gratuito e aberto-source.

Então, a maneira mais fácil de instalar isso, é usar algo chamado Desktop Docker, ok? Eu assumo que a maioria de vocês já tem isso no seu computador. Se você não tiver, você pode apenas acessar o Desktop Docker. Agora, uma vez que você tenha acessado o Desktop Docker, eu vou linkar esta página na descrição, que é a guia de instalação.

Nós vamos apenas abri-la, então vamos para o Desktop Docker aqui, e vamos para a tabulação de extensões. De extensões, vamos apertar aqui, e vamos browsar para a extensão MindsDB, ok? Então, você pode ir aqui, encontrar MindsDB, apertar instalar, e então é literalmente isso. Isso vai levar um segundo, vai acessar, vai instalar, vai funcionar, e então você pode usar isso do seu computador, se você está no Mac, Linux ou Windows.

Ok, então uma vez instalado, você pode apertar abri-la, ou apenas do tabulação de extensões aqui, você pode apertar abri-la assim, e ele vai literalmente apenas abrir a tabulação direto dentro do Docker para você. Então vamos só passar por este setup básico aqui, e depois eu vou mostrar outro jeito que você pode abrir isso também, que eu prefero. Ok, então para começar aqui, nós temos que configurar um modelo de AI de default.

Agora, você pode usar qualquer um desses modelos, então você pode usar um do Google, OpenAI, etc. No meu caso, eu vou usar o OpenAI, eu vou usar GPT 4.1, e o que eu preciso fazer é pegar a chave API do OpenAI e escrever aqui. De novo, você pode escolher qualquer modelo que você quiser, e depois colocar a chave API adequada.

Então deixe-me pegar isso, e eu volto em breve. Ok, então eu só fui para platform.openai.com slash API keys, isso é onde você pode gerar uma se você quiser usar GPT, e depois eu vou escrever essa chave aqui, e vou salvar, e continuar. Ok, agora vai nos passar um pouco de um tutorial aqui, eu vou mostrar como isso funciona de qualquer forma, mas o que você pode fazer se você quiser mexer com isso, é que você pode copiar essa fonte de dados aqui, e depois você pode colocar isso diretamente no MindsDB, e se conectar com essa fonte de dados.

Então vamos com conectar e continuar por agora, e de novo, vai começar a mostrar como isso funciona, então essa é a sintaxe para criar um agente, por exemplo, criar um agente, você pode conectá-lo com esse dado, e depois é literalmente isso, certo? E agora você tem um agente que automaticamente tem o RAG instalado, e depois você pode criar o agente, que eu vou mostrar como fazer, não apenas com o MindsDB, mas também conectando-o diretamente com o código do Python, no final desse vídeo. Ok, então aqui vamos nós, e boom, agora temos a habilidade de perguntar, então podemos ir aqui e dizer, quais são os produtos mais vendidos, só porque está nos conectando com essa base de dados de venda bem simples para a demo, mas claro, eu vou mostrar como fazer isso mais customizado, em apenas um segundo. Ok, e você pode ver aqui que nos deu uma resposta, agora aparentemente minha fonte de dados não faz muito sentido, e depois do lado aqui você pode ver todos os pensamentos que o agente passou, e como ele realmente estava tentando para me dar essa resposta.

Ok, então isso é legal e tudo, mas eu só quero abrir isso no meu browser agora, porque eu acho que a UI parece um pouco melhor no browser, e depois eu posso zoomar, para que vocês possam ver um pouco mais facilmente. Então, para fazer isso, você pode abrir o seu browser, e você pode ir para esse portão, então localhost port 47334, porque isso está funcionando localmente no seu próprio computador através do Docker, quando você vai aqui, como você pode ver, ele vai automaticamente abrir isso para você, e depois nós podemos começar a trabalhar no browser, e eu acho que essa visão de UI é um pouco melhor. Então isso te dá um pouco de dados de exemplo aqui, nós não vamos usar isso por enquanto, o que eu vou fazer é só adicionar um novo tipo de script aqui, então Untitled 1, eu posso apertar duas vezes se eu quiser renovar isso, e nós vamos começar a trabalhar dentro daqui, e eu vou começar mostrando como eu conecto algumas fontes de dados, então nós vamos unificá-los, então nós vamos criar o agente, etc.

Então, para conectar com uma fonte de dados, você pode apertar esse botão aqui, e você pode ver um monte de fontes de dados diferentes que você pode conectar, eles têm um monte de opções diferentes, eles podem ser estruturados e não estruturados, mas no meu caso, eu quero mostrar algo um pouco único, onde nós escrevemos um código básico SQL para realmente tratar um site como uma fonte de dados. Então, para dar um exemplo do que eu estou falando aqui, digamos que nós temos uma página web como essa, que tem informações sobre o que é um environmento de staging, e, você sabe, alguns termos relacionados com programação, algumas coisas que talvez o nosso agente conheça, mas talvez nós queremos só dar uma página web, para que ela tenha algum contexto adicional. Agora, a forma que nós podemos conectar isso na MindsDB, é usando algumas das sentaxes seguintes, então eu vou colocar aqui, agora, eu vou apenas copiar isso, eu não vou, o que você chama, escrever linha por linha, então, deixe-me só retirar isso do meu outro monitor aqui, só para nos salvar um pouco de tempo.

Então, o que eu posso fazer, é que eu posso fazer uma database, chamada WebCrawler, com um engine igual ao web. Agora, se você está se perguntando como você consegue todas as sintaxes, todas disponíveis na documentação, então, o que eu posso fazer, obviamente, é apenas escrever isso, e aí você verá que ele é criado no lado inferior aqui. Agora que nós temos essa database, ela está vazia, mas nós podemos usar ela para criar uma página web.

Então, o próximo pedaço de sintaxe que nós precisamos escrever, é o seguinte, então é isso aqui, nós vamos criar uma nova vista, chamada Environments, ok? E aí, o que nós vamos fazer, é que nós vamos selecionar tudo do WebCrawler, que nós criamos, .crawler, onde a URL é igual a isso, e aí nós colocamos a URL da página que nós queremos escrever, e aí nós podemos especificar uma profundidade de crawl. Agora, a profundidade vai indicar quantas URLs ela vai ir mais profunda quando escrever essa página. Então, se ela encontra outro link, por exemplo, nessa página, e nós temos a profundidade de crawl igual a 1, então ela iria explorar aquele link também.

E aí, desse link, se tivéssemos a profundidade de crawl de 2, desculpe, ela iria explorar aquele link. Então, quando você faz a profundidade mais alta, ela vai explorar mais e mais páginas que estão ligadas à página original. Então, se você quisesse crawl toda a página, por exemplo, você poderia colocar uma profundidade de crawl de 4 ou 5, e aí ela vai recursivamente crawl por todas as páginas que ela descobre enquanto ela está crawlando a página.

Mas, por enquanto, o que nós vamos fazer, é que nós vamos acelerar isso, e aí nós vamos apertar Run. Se você quer acelerar apenas um comando, então apenas acelerar o comando no editor. Se você não tiver nada acelerado, ela vai acelerar tudo.

Então, se eu acelerar isso e apertar Run, ela agora acelerou isso, e aí você vai ver que ela criou uma vista para nós. Então, se a gente for para Vistas no nosso MindsDB Project, nós temos essa vista de ambiente, e então, se eu apertar a vista, ela, de acordo com o default, me dá, tipo, uma vista de exemplo aqui. E você pode ver, quando a gente scroll, ela tem um monte de conteúdo de texto, que é todo o conteúdo que ela escreveu deste site.

Então, agora, nós apenas criamos um databases simples, onde nós escravizamos um único URL, e aí nós pegamos todo o conteúdo de texto. Então, agora nós temos este conjunto de ambientes, e aí nós podemos ir para o próximo passo. Ok, então nós temos o dados, mas a próxima coisa que nós queremos fazer é, na verdade, transformar isso em uma base de conhecimento.

Agora, uma base de conhecimento é, essencialmente, uma base de dados vectorizada, onde ela automaticamente chunca e embede o conteúdo de texto diferente que vem dos nossos dados. Então, esta é a parte que é, tipicamente, difícil de fazer, se você estiver escrevendo o seu próprio código do início, porque você precisa setar um modelo de embedimento, e aí você precisa fazer todo esse chunking, e toda essa coisa. MindsDB, essencialmente, maneja tudo isso para você, fora da caixa, apenas usando, novamente, algumas das sintaxes SQL.

Então, o que nós podemos fazer é, nós podemos agora tomar esta visão ambiental, nós podemos transformá-la em uma base de conhecimento, e essa base de conhecimento é, então, algo que o agente AI pode usar. Então, o que eu vou fazer, novamente, é apenas copiar algumas sintaxes aqui, e mostrar a você como isso funciona. Então, estes são comentários, por acaso.

Se você quiser remover os comentários, você pode apenas acelerar isto, e clicar ctrl slash no seu computador. Então, o que eu estou fazendo é, eu estou dizendo, cria, base de conhecimento, eu vou chamar isto de ambiente KB, que significa base de conhecimento, usando, e aí eu estou tomando a minha coluna de metadados igual ao url, porque eu vou tirar isto dos meus ambientes, e aí eu vou ter as minhas colunas de conteúdo sendo iguais ao conteúdo de texto. Agora, agora, eu estou apenas estabelecendo a base de conhecimento, eu ainda não populizei com nada ainda, mas isto vai criar uma base de dados com vectores para mim, onde eu, então, posso inserir os dados, e ele vai automaticamente ser vectorizado.

Se você não sabe o que isso significa, essencialmente, nós temos que transformar nossos dados em vectores, para que ele possa rapidamente ser olhado em algo chamado pipeline RAG, Retrieval Augmented Generation, que é o que este comando permite você fazer. Então, se eu copiar isto, eu posso ir em Run, tudo bem, e apenas espere um segundo, e ele deveria inicializar esta base de conhecimento, e então nós podemos adicionar todos os conteúdos dentro disso. Tudo bem, então agora a base de conhecimento está criada, nós podemos vê-la desde aqui, e então, se quisermos, nós podemos runar o comando Descreva base de conhecimento, e se descrevermos isto, você verá que nós recebemos toda a informação sobre isto.

Então, mostra-nos a armazenada, está usando ChromaDB no fundo, as colunas de metade, as colunas de conteúdo, colunas de ID, parâmetros, etc. E toda esta outra coisa que precisamos para a embedição. Ok, e então a próxima coisa que precisamos fazer é inserir na base de conhecimento, então eu vou mostrar-lhe isto aqui.

Nós podemos dizer, inserir o environment.kb, nós podemos selecionar a URL e o conteúdo de texto do nosso environment.view, então, de novo, isto é tipo um código SQL padrão, apenas um pouco ajustado para MindsDB, e quando eu inserir isto aqui, vai demorar um segundo porque eu tenho que pegar todo este conteúdo, vectorizar-o e adicionar-o à base de conhecimento. Ok, e você pode ver que isso foi muito rápido. Ok, e agora que está inserido, se nós queremos ver nossa base de conhecimento, podemos ir selecionar o asterisco da base de conhecimento do environment, e se nós virmos aqui, você verá que nós recebemos o ID, o ID de coluna, o conteúdo de coluna, a metade, e então todas as relevâncias e a distância, que nós não temos agora porque nós não pesquisamos nada, e quando você clicar aqui, você pode ver que automaticamente chuncou este conteúdo para nós, e criou todos os fios apropriados que nós precisamos, para que nós possamos, bem, pesquisar por isso.

Ok, legal. Então agora nós temos a base de conhecimento criada, e o próximo passo é usar a base de conhecimento para gerar algum tipo de código. Agora, para fazer isso, nós só precisamos fazer um código mais avançado na base de conhecimento, onde nós passamos algum tipo de asterisco, e então nós podemos calcular a relevância e a distância para esse asterisco usando as embedidinhas.

Então eu só pastei um fio aqui, e você pode ver que é um asterisco selecionado da base de conhecimento do ambiente, onde o conteúdo é igual ao que está estacionando, e a relevância é maior que ou igual a 0.6. Então o que vai acontecer é que ele vai anular, essencialmente, todos os resultados que estão na base de conhecimento, e dar um tipo de valor relevante baseado no conteúdo que nós providemos. Então, neste caso, nós só fizemos um filtro simples, onde nós dissemos, ok, nós só queremos pegar as coisas que são mais que 60% relevantes, certo? Ou 0.6 relevância. Então, se eu jogar isso aqui, na verdade, eu deveria apenas destacar isso.

Então você pode ver aqui, agora, se eu levar isso aqui, mostra-me a query que foi feita, e então me dá o id de chunk e o conteúdo de chunk. Neste caso, o estacionamento ocorre tarde no ciclo de desenvolvimento do software, blá, blá, blá, e obviamente, isso é relevante, e se a gente continuar escolhendo, podemos ver a distância e a relevância dos resultados que foram pulados. Ok, legal.

Então é isso, eu só queria mostrar um exemplo simples aqui de trabalhar com um pouco de dados desestruturados. Então, de novo, tudo desse único produto, nós conseguimos pular coisas do web, criar uma base de conhecimento em torno disso, e então começar a queryar a base de conhecimento para obter informação. O próximo passo, eu vou estabelecer uma database estruturada usando uma conexão PostgreSQL.

Então, o que eu vou fazer é eu vou combinar essas duas fontes juntas em um agente de AI que pode nos dar respostas mais acuradas. Então, vamos fazer um novo arquivo aqui e vamos para esse próximo tipo de mini-projeto. Ok, então o que eu vou fazer aqui é apenas conectar a uma fonte de dados de dados aqui do MindsDB.

Essa é a fonte que eles provaram no tutorial então vocês podem usar essa fonte também. E eu só vou lançar isso, e então nós devemos ver que essa database se conecta no lado esquerdo. Ok, e você pode ver agora que eu chamei essa fonte de dados e a fonte de dados está aparecendo aqui.

E se clicarmos nisso, podemos ver todas as diferentes tabelas que nós temos. Agora, para esse vídeo específico, eu vou usar a tabela de engenharia que nós temos aqui, então deixe-me encontrar onde é. Ok, então, na verdade, eu percebi que eu estava usando a esquema errada aqui para isso, então eu só mudei isso para demo, e agora nós temos o dataset que eu estava procurando. Então eu tenho demo, e então dataset de engenharia, e se eu olhar o dataset de engenharia, você pode ver que nós temos todos esses environmentos, então é por isso que eu estava pulando informação de estágio antes, erro, problema, impacto nos clientes, dados ocorreram, etc.

Então, o que eu vou fazer é que eu quero enriquecer esse dado um pouco antes de começar a passar para o meu LLM. Então eu vou mostrar um jeito que nós podemos fazer um enriquecimento onde, essencialmente, para cada entrada no nosso database, nós podemos passar para um LLM, nós podemos pegar o LLM para gerar alguns dados novos, baseados nesses dados, e então nós podemos criar essa nova base de conhecimento que nós depois proporcionamos para nosso agente. Então, eu vou te mostrar como fazemos isso.

Ok, então eu já fiz isso porque vai levar um segundo para executar, mas deixe-me te guiar pelo que eu fiz. Então eu disse, CREATE TABLE, FILES, então eu vou guardar isso no menu do FILE aqui. Eu chamo isso de ENRICHED ISSUES, e então eu estou selecionando ISSUE, ENVIRONMENTO, ERRO RATE, IMPACTO DE CLIENTES, E SEVERIDADE do dataset de engenharia, e eu também estou criando uma nova entrada aqui, onde eu estou usando esse LLM call.

Então eu estou dizendo LLM, e então determinar um possível fixo para a questão, e então eu estou passando a questão, então eu estou combinando usando esse operador de pipa aqui, e então como um possível fixo. Então o que isso está fazendo é aumentar esse dado com esse LLM gerado de dados, e então fazendo uma nova tabla para mim que tem esses fios, além desse novo fio que sugere um possível fixo para esse problema. Então, de novo, vai levar um segundo para funcionar, é só porque ele precisa chamar o LLM para cada entrada, e você pode configurar qual LLM você está usando para essa chamada em os setores MindDB.

Então, se você for para os setores aqui, você pode ajustar qual, você pode mudar as chaves do API, etc. No meu caso, eu estou apenas usando o default OpenAI1. Tudo bem, então a query acabou.

Se você for para os fios, você pode ver que nós temos os logs enriquecidos, e eu apenas mudei o nome aqui para logs, porque isso faz um pouco mais sentido. Se você apertar nisso, você é capaz de prevê-lo aqui, e você pode ver que nós temos a questão, ENVIRONMENTO, ERROR RATE, IMPACT CUSTOMER, SEVERITY, POSSIBLE FIX, etc. E o POSSIBLE FIX é o novo que nós geramos aqui do LLM.

Então, o próximo passo é gerar um agente que se conecta com esse dado, assim como com o outro dado que nós tivemos, o que nós tiramos do site. Então, deixe-me mostrar a sintaxe para fazer isso. Tudo bem, então essa é a sintaxe aqui.

Você vai criar um agente, agente de estagio, usando, e esse é o nome, por acaso, e aí você oferece a informação do modelo. Então, nesse caso, nós temos o providor, OpenAI, nome de modelo, GPD 4.0, passamos a chave do API, é claro, não leia isso como eu, eu vou deletá-lo depois, depois passamos o seu dados. Então, nesse caso, nós especificamos a base de conhecimento, que é isso, e as tabelas, que é isso, e, é claro, nós podemos incluir mais dados aqui se quisermos, e então nós damos um template de prompto.

Sinta-se livre de lê-lo, eu só disse, hey, você sabe, você é um analista de QA de alta qualidade, faça blá, blá, blá. Ok? Então, nós podemos rodar isso, que eu já fiz, e aí você vai ver que nós temos um novo agente aqui, chamado agente de estagio. Então, agora, se nós queremos usar o agente, nós podemos fazer uma query contra o agente com algum tipo de pergunta, e nós vamos ter uma resposta.

Eu também vou mostrar algo na UI que faz isso um pouco mais fácil de usar o agente. Então, aqui é um exemplo de como fazer isso. Nós podemos dizer selecionar, resposta do nosso agente, onde a pergunta é igual a isso, certo? E então, se nós highligharmos isso e nós rodarmos, vai levar um segundo, e deveria gerar uma resposta para nós aqui, então vamos dar um segundo para ver o que nós temos.

Ok? E você pode ver aqui, nós temos a resposta, a questão que impacta o maior número de clientes no setor de dados de engenharia, que é a data sinc lag, com um total de 844 clientes impactados. Perfeito. Ok, então é assim que você faz isso daqui, certo? Tipo, onde nós estamos nesse tipo de tabulamento unificado, mas se você quiser, você também pode ir para o tabulamento de resposta, você pode apenas selecionar o seu agente, e aí você pode perguntar a mesma coisa.

Você pode dizer, o que é o tipo de questão mais fácil de resolver? Ok? E então, o que você vai poder ver é o pensamento do agente enquanto ele corre por esse processo também. Então, ele vai dizer, tipo, ei, preciso usar uma ferramenta, ele vai pensar no processo, e aí você pode ver, tipo, toda a coisa que está acontecendo aqui, e aí ele nos dá a resposta que é a questão mais fácil de resolver, baseada nos critérios de severidade baixa, o mínimo número de erros infusos que impactam clientes, é a questão de pedidos de API retornando 500 erros, e aí ele nos dá a coisa inteira e nos diz o que é o possível resolver. Então, esse é o jeito mais fácil de interagir com o agente, e então, de novo, você pode escolher os diferentes agentes aqui, sabe, você pode ver toda a informação sobre eles, e aí você pode ver os pensamentos enquanto lhes pergunta isso.

Ok, então é isso para usar isso na UI, mas, obviamente, se formos fazer um agente, provavelmente queremos poder conectá-lo, tipo, do nosso site, ou do nosso computador local, então eu vou te mostrar um script de Python muito simples, que te permite conectar com esses agentes terminados, para que você possa atualmente lançá-los do seu código. Ok, então eu não vou escrever todo o código de novo, mas você pode ver que eu acabei de setar um script muito simples aqui, eu estou usando o MindsDB SDK, que você pode apenas instalar fazendo, tipo, pip install MindsDB SDK, então nós apenas conectamos este portão, onde o MindsDB Studio está funcionando, nós podemos pegar o projeto que estamos no, que é o MindsDB, e então nós podemos fazer um código, então, para o código, nós apenas escrevemos o mesmo código que escrevemos no editor, então, selecionar a resposta do agente de lançamento, onde a pergunta é igual a, neste caso, é uma variável que eu estou passando, e então eu apenas setei um while loop, eu digo, ok, entrei uma pergunta, e então o que eu faço é fazer o string de código, passá-lo para o código, ou passá-lo para o projeto, desculpe, pegue o resultado, e então apenas imprime o que a resposta é. É isso, muito simples, se eu for aqui e eu escrevo uv run main.py, ele deveria virar, e então eu deveria poder perguntar algo, então eu diria, qual é o maior problema de severidade que eu posso fixar agora, e então, boom, ele deveria nos dar uma resposta. Ok, e então você pode ver, ele nos dá a resposta inteira aqui, e diz, você sabe, este é o problema relacionado a pedidos de API, blá blá blá, este é o impacto nos clientes, este é como você fixa, e então o que eu vou fazer é mostrar o exit, e sair disso.

Ok, legal, então é isso, isso é o MindsDB, espero que vocês tenham encontrado algum valor aqui, eu sei que não é 100% claro sobre o que todo o sintetizador faz, obviamente, seja livre de referenciar a documentação, mas eu acho que isso é genuinamente uma ferramenta bem legal, é muito efetiva, faz o que promete, é grátis e é open source, e você pode usar localmente, então eu não sei o que mais você pode pedir quando se trata de construir um agente de A.I. muito rapidamente, um grande obrigado para o MindsDB por apoiar o vídeo e me equipar, e espero que vocês tenham gostado, vejo vocês em outro vídeo. Transcrição e Legendas www.intervoices.com
 Transcrito por TurboScribe.ai. Atualize para Ilimitado para remover esta mensagem.
